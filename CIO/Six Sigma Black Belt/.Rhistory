library(RQDA)
install.packages(RQDA)
install.packages("RQDA")
install.packages("RQDA")
library(RQDA)
library("RQDA")
install.packages('RQDA', type='binary
)
install.packages('RQDA', type='binary)
install.packages("devtools") ## install it only if you haven't done it yet
require(devtools)
devtools::install_github("Ronggui/RQDA")
install.packages("RQDA")
install.packages("RQDA", dep = T)
install.packages("RQDA", binary = T)
install.packages(c("backports", "boot", "broom", "callr", "class", "codetools", "colorspace", "data.table", "DBI", "dbplyr", "doParallel", "fastmap", "flextable", "foreach", "foreign", "gdtools", "GGally", "ggplot2", "ggthemes", "gh", "git2r", "isoband", "iterators", "KernSmooth", "labeling", "lme4", "lubridate", "Matrix", "nlme", "nnet", "officer", "pkgbuild", "plotrix", "processx", "ps", "RcppEigen", "rmarkdown", "rstudioapi", "sp", "spatial", "statmod", "systemfonts", "testthat", "tidygeocoder", "tinytex", "usethis", "xfun"))
library(qcoder)
create_qcoder_project("my_qcoder_project", sample = TRUE)
import_project_data(project = "my_qcoder_project")
qcode()
install.packages("textreadr")
code_id,code,code.description
Filename,unit_id,Name
doc_path,unit_id
import_project_data(project = "my_qcoder_project")
qcode()
install.packages("qualtRics")
install.packages("remotes")
remotes::install_github("ropensci/qualtRics")
all_surveys()
library(qualtRics)
all_surveys()
qualtrics_api_credentials()
library("dplyr") # Data reshaping package
library("dplyr") # Data reshaping package
library("tidyr") # Data reshaping package
library("readr") # Reading a csv file
cleandata <- read_csv("~/Desktop/UWCL/2020-21/Innovation Lab/Data Viz/Case2_DCYF/Data/ENG_DCYFCQI_020121.csv")
head(cleandata, 5)
tail(cleandata, 5) # Clear
* Inspiration: [本橋智光, 2019](http://www.yes24.com/24/AuthorFile/Author/278360)
* RMD reference: [Hwangbo, 2020](https://github.com/mhwangbo11/Workshop/blob/master/Workshop/Data%20Transformation/Source/DataReshape_INL_071320.rmd)
library("dplyr") # Data reshaping package
library("tidyr") # Data reshaping package
library("readr") # Reading a csv file
library("dplyr") # Data reshaping package
library("tidyr") # Data reshaping package
library("readr") # Reading a csv file
cleandata <- read_csv("~/Desktop/UWCL/2020-21/Innovation Lab/Data Viz/Case2_DCYF/Data/ENG_DCYFCQI_020121.csv")
head(cleandata, 5) # Clear
tail(cleandata, 5) # Clear
ls(cleandata) # Good to know
head(cleandata, 5) # Clear
tail(cleandata, 5) # Clear
ls(cleandata) # Good to know
View(cleandata) # Snapshot
summary(cleandata)
head(cleandata, 5) # Clear
tail(cleandata, 5) # Clear
ls(cleandata) # Good to know
tail(cleandata, 5) # Clear
# We'll going to use a piper, then use a `filter` function.
data1 <- cleandata %>%
filter(Response != na)
# We'll going to use a piper, then use a `filter` function.
data1 <- cleandata %>%
filter(Response =! na)
# We'll going to use a piper, then use a `filter` function.
data1 <- cleandata %>%
filter(Response == !na)
# We'll going to use a piper, then use a `filter` function.
data1 <- cleandata %>%
filter(Response ==! na)
# We'll going to use a piper, then use a `filter` function.
data1 <- cleandata %>%
filter(Response ==! "na")
# We'll going to use a piper, then use a `filter` function.
data1 <- cleandata %>%
filter(Response !== "na")
# We'll going to use a piper, then use a `filter` function.
data1 <- cleandata %>%
filter(Response != "na")
View(data1)
View(cleandata)
View(data1)
filter(Response != c("na","Na","n/a", "N/a", "NA", "?", "-")
# We'll going to use a piper, then use a `filter` function.
data1 <- cleandata %>%
data1 <- cleandata %>%
filter(Response != c("na","Na","n/a", "N/a", "NA", "?", "-"))
View(data1)
data1 <- cleandata %>%
filter(Response!= c("na","Na","n/a", "N/a", "NA", "?", "-"))
data1 <- cleandata %>%
filter(Response != c("na","Na","n/a", "N/a", "NA", "?", "-"))
data2 <- data1 %>%
filter(Response != "Na")
data3 <- data2 %>%
filter(Response != n/a)
data3 <- data2 %>%
filter(Response != n/a)
data3 <- data2 %>%
filter(Response != "n/a")
data4 <- data3 %>%
filter(Response != "N/a")
data5 <- data4 %>%
filter(Response `= "NA")
View(data4)
data5 <- data4 %>%
filter(Response `= "NA")
data5 <- data4 %>%
filter(Response != "NA")
data4 <- data3 %>%
filter(Response != "N/a")
data5 <- data4 %>%
filter(Response != "NA")
View(data5)
data6 <- data5 %>%
filter(Response != "?")
data7 <- data6 %>%
filter(Response != "-")
write.csv(data7, "CleanENG_DCYFCQI_020121.csv")
data6 <- data5 %>%
filter(Response != "?")
data7 <- data6 %>%
filter(Response != "-")
data7 <- data6 %>%
filter(Response != "-")
data3 <- data2 %>%
filter(Response != "n/a")`
# Make sure to do a quality check after each round
data1 <- cleandata %>%
filter(Response != "na")
data2 <- data1 %>%
filter(Response != "Na")
data3 <- data2 %>%
filter(Response != "n/a")`
data4 <- data3 %>%
filter(Response != "N/a")
data5 <- data4 %>%
filter(Response != "NA")
data3 <- data2 %>%
filter(Response != "n/a")`
data3 <- data2 %>%
filter(Response != "n/a")
data4 <- data3 %>%
filter(Response != "N/a")
data5 <- data4 %>%
filter(Response != "NA")
data6 <- data5 %>%
filter(Response != "?")
data7 <- data6 %>%
filter(Response != "-")
data8 <- data7 %>%
filter(Response != "")
data8 <- data7 %>%
filter(Response != "")
data8 <- data7 %>%
filter(Response != "")
data8 <- data7 %>%
filter(Response != "")
knitr::opts_chunk$set(echo = TRUE)
library("dplyr") # Data reshaping package
library("tidyr") # Data reshaping package
library("readr") # Reading a csv file
library("dplyr") # Data reshaping package
library("tidyr") # Data reshaping package
library("readr") # Reading a csv file
# Step 2: Loading data set
```{r}
cleandata <- read_csv("~/Desktop/UWCL/2020-21/Innovation Lab/Data Viz/Case2_DCYF/Data/ENG_DCYFCQI_020121.csv")
head(cleandata, 5) # Clear
tail(cleandata, 5) # Clear
ls(cleandata) # Good to know
# Make sure to do a quality check after each round
data1 <- cleandata %>%
filter(Response != "na")
data2 <- data1 %>%
filter(Response != "Na")
data3 <- data2 %>%
filter(Response != "n/a")
data4 <- data3 %>%
filter(Response != "N/a")
data5 <- data4 %>%
filter(Response != "NA")
data6 <- data5 %>%
filter(Response != "?")
data7 <- data6 %>%
filter(Response != "-")
data8 <- data7 %>%
filter(Response != "")
